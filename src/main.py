import os
import shutil
from pathlib import Path
from crewai import Crew
from src.agents.test_designer import test_designer
from src.agents.test_coder import test_coder
from src.agents.test_runner import test_runner
from src.agents.qa_reporter import qa_reporter
from src.tasks.design_tasks import design_tests
from src.tasks.code_tasks import code_tests
from src.tasks.run_tasks import run_tests
from src.tasks.report_tasks import report_tasks


def run_qa_pipeline(spec_file: str, issue_key: str) -> str:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π AI QA pipeline –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –¢–ó.
    
    Args:
        spec_file (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (—Ç–µ–∫—Å—Ç/–¢–ó)
        issue_key (str): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, QA-123)
    
    Returns:
        str: URL –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É Allure-–æ—Ç—á—ë—Ç—É
    """
    # –°–æ–∑–¥–∞—ë–º –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –∑–∞–¥–∞—á–∏
    output_dir = Path(f"output/{issue_key}")
    output_dir.mkdir(parents=True, exist_ok=True)

    # –ö–æ–ø–∏—Ä—É–µ–º –¢–ó –≤ —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É (–¥–ª—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏)
    spec_dest = output_dir / "spec.txt"
    shutil.copy(spec_file, spec_dest)

    # –ß–∏—Ç–∞–µ–º –¢–ó
    with open(spec_dest, "r", encoding="utf-8") as f:
        spec = f.read()

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏ –¥–ª—è –∑–∞–¥–∞—á
    test_cases_path = str(output_dir / "test_cases_nlp.md")
    test_code_path = str(output_dir / "test_api.py")
    dockerfile_path = str(output_dir / "Dockerfile")
    allure_results_path = str(output_dir / "allure-results")
    allure_report_path = str(output_dir / "allure-report")

    # –°–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á–∏ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –ø—É—Ç—è–º–∏
    tasks = [
        design_tests(test_designer, spec, output_file=test_cases_path),
        code_tests(test_coder, input_file=test_cases_path, output_file=test_code_path),
        run_tests(
            test_runner,
            test_file=test_code_path,
            dockerfile_path=dockerfile_path,
            allure_results_path=allure_results_path
        ),
        report_tasks(
            qa_reporter,
            allure_results_path=allure_results_path,
            allure_report_path=allure_report_path
        )
    ]

    # –ó–∞–ø—É—Å–∫ –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—É—é AI –∫–æ–º–∞–Ω–¥—É
    crew = Crew(
        agents=[test_designer, test_coder, test_runner, qa_reporter],
        tasks=tasks,
        verbose=2
    )

    crew.kickoff()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º URL –æ—Ç—á—ë—Ç–∞ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ö–æ—Å—Ç)
    report_url = f"http://localhost:8080/allure/{issue_key}/index.html"
    print(f"\n‚úÖ Pipeline –¥–ª—è {issue_key} –∑–∞–≤–µ—Ä—à—ë–Ω!")
    print(f"üìÅ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: {output_dir.absolute()}")
    print(f"üîó –û—Ç—á—ë—Ç: {report_url}")

    return report_url


# –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Ä—É—á–Ω—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
if __name__ == "__main__":
    import sys
    if len(sys.argv) != 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python main.py <–ø—É—Ç—å_–∫_–¢–ó.txt> <–∫–ª—é—á_–∑–∞–¥–∞—á–∏>")
        sys.exit(1)

    spec_path = sys.argv[1]
    task_key = sys.argv[2]

    if not os.path.isfile(spec_path):
        print(f"–û—à–∏–±–∫–∞: —Ñ–∞–π–ª {spec_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)

    run_qa_pipeline(spec_path, task_key)